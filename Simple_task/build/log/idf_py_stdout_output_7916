[1/10] Performing build step for 'bootloader'
[1/1] cmd.exe /C "cd /D C:\Users\mateo\Documents\GitHub\ESP32_FreeRTOS\Simple_task\build\bootloader\esp-idf\esptool_py && C:\Users\mateo\.espressif\python_env\idf5.0_py3.10_env\Scripts\python.exe C:/Users/mateo/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 C:/Users/mateo/Documents/GitHub/ESP32_FreeRTOS/Simple_task/build/bootloader/bootloader.bin"
Bootloader binary size 0x6700 bytes. 0x900 bytes (8%) free.
[2/8] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/main.c.obj
[3/8] Linking C static library esp-idf\main\libmain.a
[4/8] Generating ld/sections.ld
[5/8] Linking CXX executable Simple_task.elf
[6/8] Generating binary image from built executable
esptool.py v4.5.1
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated C:/Users/mateo/Documents/GitHub/ESP32_FreeRTOS/Simple_task/build/Simple_task.bin
[7/8] cmd.exe /C "cd /D C:\Users\mateo\Documents\GitHub\ESP32_FreeRTOS\Simple_task\build\esp-idf\esptool_py && C:\Users\mateo\.espressif\python_env\idf5.0_py3.10_env\Scripts\python.exe C:/Users/mateo/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app C:/Users/mateo/Documents/GitHub/ESP32_FreeRTOS/Simple_task/build/partition_table/partition-table.bin C:/Users/mateo/Documents/GitHub/ESP32_FreeRTOS/Simple_task/build/Simple_task.bin"
Simple_task.bin binary size 0x2b380 bytes. Smallest app partition is 0x100000 bytes. 0xd4c80 bytes (83%) free.
[7/8] cmd.exe /C "cd /D C:\Users\mateo\esp\esp-idf\components\esptool_py && C:\Users\mateo\.espressif\tools\cmake\3.24.0\bin\cmake.exe -D IDF_PATH=C:/Users/mateo/esp/esp-idf -D SERIAL_TOOL=C:/Users/mateo/.espressif/python_env/idf5.0_py3.10_env/Scripts/python.exe;;C:/Users/mateo/esp/esp-idf/components/esptool_py/esptool/esptool.py;--chip;esp32 -D SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args -D WORKING_DIRECTORY=C:/Users/mateo/Documents/GitHub/ESP32_FreeRTOS/Simple_task/build -P C:/Users/mateo/esp/esp-idf/components/esptool_py/run_serial_tool.cmake"
esptool esp32 -p COM3 -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 40m --flash_size 2MB 0x1000 bootloader/bootloader.bin 0x10000 Simple_task.bin 0x8000 partition_table/partition-table.bin
esptool.py v4.5.1
Serial port COM3
Connecting.....
Chip is ESP32-D0WDQ6 (revision v1.0)
Features: WiFi, BT, Dual Core, 240MHz, VRef calibration in efuse, Coding Scheme None
Crystal is 40MHz
MAC: 24:0a:c4:97:66:a8
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 460800
Changed.
Configuring flash size...
Flash will be erased from 0x00001000 to 0x00007fff...
Flash will be erased from 0x00010000 to 0x0003bfff...
Flash will be erased from 0x00008000 to 0x00008fff...
Compressed 26368 bytes to 16444...
Writing at 0x00001000... (50 %)
Writing at 0x000076b1... (100 %)
Wrote 26368 bytes (16444 compressed) at 0x00001000 in 0.7 seconds (effective 300.2 kbit/s)...
Hash of data verified.
Compressed 177024 bytes to 93666...
Writing at 0x00010000... (16 %)
Writing at 0x0001b4e1... (33 %)
Writing at 0x00020df0... (50 %)
Writing at 0x00026585... (66 %)
Writing at 0x0002f069... (83 %)
Writing at 0x00036e21... (100 %)
Wrote 177024 bytes (93666 compressed) at 0x00010000 in 2.5 seconds (effective 570.3 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 103...
Writing at 0x00008000... (100 %)
Wrote 3072 bytes (103 compressed) at 0x00008000 in 0.0 seconds (effective 531.5 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
